//
// When color definition differs for dark and light variant,
// it gets @if ed depending on $variant
//


@function shellopacity($c, $a) {
  @return scale-color($c, $alpha: percentage(-1 + $a));
}

// Import key colour-scheme defined at build-time.
@import 'key_colors';

//
// Foreground colors
//

$fg_color: if($nokto == 'false', #574F4A, #F6F6F6);
$secondary_fg_color: shellopacity($fg_color, 0.75);

$dim_fg_color: shellopacity($fg_color, 0.4);

$selected_fg_color: #F6F6F6;

$insensitive_fg_color: shellopacity($fg_color, 0.4);
$insensitive_secondary_fg_color: shellopacity($secondary_fg_color, 0.4);


//
// Inverted foreground colors
//

$inverted_fg_color: if($nokto == 'false', #F6F6F6, #574F4A);
$inverted_secondary_fg_color: shellopacity($inverted_fg_color, 0.75);
$inverted_dim_fg_color: shellopacity($inverted_fg_color, 0.4);


//
// Background colors
//

$bg_color: if($nokto == 'false', #FAFBFC, #333333);
$base_color: if($nokto == 'false', #F6F6F6, #445A64);
$secondary_base_color: if($nokto == 'false', #FDFDFE, #42565F);
$secondary_dark_color: if($nokto == 'false', #F6F6F6, #888888);

$fill_color: shellopacity($fg_color, 0.15);
$semi_fill_color: shellopacity($fg_color, 0.07);
$hidden_fill_color: rgba(0, 0, 0, 0.01);

$panel_bg_color: mix(#574F4A, #000000, 50%);
$panel_hidden_fill_color: rgba(19, 25, 28, 0.01);
$panel_fill_color: rgba(19, 25, 28, 1.0);

$selected_bg_color: $key_selection_color;

$insensitive_bg_color: mix($bg_color, $base_color, 60%);
$insensitive_fill_color: shellopacity($fill_color, 0.4);


//
// Inverted background colors
//

$inverted_bg_color: if($nokto == 'false', #333333, #FAFBFC);
$inverted_base_color: #574f4a;
$inverted_dim_bg_color: shellopacity($inverted_bg_color, 0.2);


//
// Accent colors
//

$accent_color: $key_accent_color;
$accent_label_color: if($nokto == 'false',
                        mix($key_accent_color, $fg_color, 80%),
                        mix($key_accent_color, $fg_color, 60%));
$secondary_accent_color: shellopacity($accent_color, 0.8);
$secondary_accent_label_color: shellopacity($accent_label_color, 0.8);
$insensitive_accent_label_color: shellopacity($accent_label_color, 0.4);

$accent_fill_color: shellopacity($accent_color, 0.1);
$accent_active_fill_color: shellopacity($accent_color, 0.25);

$inverted_accent_label_color: if($nokto == 'false',
                              mix($key_accent_color, $inverted_fg_color, 60%),
                              mix($key_accent_color, $fg_color, 60%));
$inverted_secondary_accent_label_color:
  shellopacity($inverted_accent_label_color, 0.8);


//
// Misc colors
//

$borders_color: if($nokto == 'false', shellopacity(#000000, 0.09),
                                      shellopacity(#000000, 0.11));
$borders_edge: shellopacity(#000000, 0.05);
$top_hilight: $borders_edge;
$borders_highlight: shellopacity(#F6F6F6, 0.07);
$insensitive_borders_color: $borders_color;

$link_color: #03A9F4;
$link_visited_color: #9C27B0;

$warning_color: #FF9800;
$error_color: #F44336;
$success_color: #00E676;

$suggested_color: $key_suggestion_color;


//
// OSD Foreground colors
//

$osd_fg_color: if($nokto == 'false', $inverted_fg_color, $fg_color);
$osd_secondary_fg_color: shellopacity($osd_fg_color, 0.75);

$osd_dim_fg_color: shellopacity($osd_fg_color, 0.5);

$insensitive_osd_fg_color: shellopacity($osd_fg_color, 0.4);
$insensitive_osd_secondary_fg_color: shellopacity($osd_secondary_fg_color, 0.4);


//
// OSD Background colors
//

$osd_bg_color: mix(#574F4A, #888888, 75%);
$osd_base_color: if($nokto == 'false', $inverted_base_color, $bg_color);

$osd_fill_color: shellopacity($osd_fg_color, 0.4);
$osd_semi_fill_color: shellopacity($osd_fg_color, 0.2);
$osd_slight_fill_color: shellopacity($osd_fg_color, 0.12);

$osd_indicator_color: $selected_bg_color;

$osd_borders_color: $borders_color;
$osd_outer_borders_color: transparent;
$tooltip_borders_color: $osd_borders_color;

$insensitive_osd_fill_color: shellopacity($osd_fill_color, 0.4);

