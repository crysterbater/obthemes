// /******************
//  * Budgie Desktop *
//  ******************/

// specific ripple-effect for IconTaskList
@keyframes budgie_ripple_effect {
  from {
    background-image: -gtk-gradient(radial,
                                    center center, 0,
                                    center center, 0.001,
                                    to(gtkalpha($inverted_fg_color, 0.2)),
                                    to(transparent)),
                      linear-gradient(to bottom,
                                      gtkalpha($inverted_fg_color, 0.2));
  }
  to {
    background-image: -gtk-gradient(radial,
                                    center center, 0,
                                    center center, 0.4,
                                    to(gtkalpha($inverted_fg_color, 0.2)),
                                    to(transparent)),
                      linear-gradient(to bottom,
                                      gtkalpha($inverted_fg_color, 0.2));
  }
}

// orientation
$orientation: ((top, bottom),
               (bottom, top));

$full_orientation: ((top, bottom),
                    (bottom, top),
                    (left, right),
                    (right, left));

// main container
.budgie-container { background-color: transparent; }

// panel styling
.budgie-panel {
  // always use dark-color of dark variant
  background-color: $panel_bg_color;
  color: $inverted_fg_color;
  font-weight: 700;

  // used to indicate unread notifications
  .alert { color: $suggested_color; }

  // do no make un-clickable gaps
  > GtkBox:first-child {
    margin: -2px 0 -2px -2px;
    &:dir(rtl) { margin: -2px -2px -2px 0; }
  }

  > GtkBox:nth-child(2) { margin: -2px 0 -2px 0; }

  > GtkBox:last-child {
    margin: -2px -2px -2px 0;
    &:dir(rtl) { margin: -2px 0 -2px -2px; }
  }
}

@each $along_side, $opp_side in $full_orientation {
  // panel shadow styling
  .#{$along_side} .shadow-block {
    background-color: transparent;
    background-image: linear-gradient(to #{$opp_side},
                                      gtkalpha(#000000, 0.23),
                                      gtkalpha(#000000, 0.08),
                                      transparent);
  }

  // raven border styling
  .#{$along_side} .raven-frame {
    padding: 0;
    border: none;
    border-#{$opp_side}: 1px solid $borders_color;
    background: none;
  }
}

// wnck tasklist styling
.budgie-panel WnckTasklist {
  .button {
    border: none;
    background: none;
    box-shadow: none;

    .label,
    GtkImage { opacity: 0.75; }

    &:hover,
    &:active,
    &:checked {
      box-shadow: none;

      .label,
      GtkImage { opacity: 1.0; }
    }
  }
}

// icon tasklist styling
.budgie-panel {
  .launcher {
    border: 2px solid transparent;
    background-image: -gtk-gradient(radial,
                                    center center, 0,
                                    center center, 0.4,
                                    to(gtkalpha($inverted_fg_color, 0)),
                                    to(transparent)),
                      linear-gradient(to bottom,
                                      gtkalpha($inverted_fg_color, 0));
    background-size: 3em * 2 / 0.8 3em * 2 / 0.8, auto;
    background-position: center center;
    transition-timing-function: cubic-bezier(0.25, 0.46, 0.45, 0.94);
    transition-property: opacity,
                         border-color,
                         background-color,
                         background-image,
                         box-shadow;
    transition-duration: 0.2s;

    > GtkImage { opacity: 0.5; }

    &:hover {
      -gtk-image-effect: highlight;

      > GtkImage { opacity: 0.75; }
    }
    &:active {
      transition-duration: 0;
      animation: budgie_ripple_effect 0.2s
                 cubic-bezier(0.25, 0.46, 0.45, 0.94) forwards;

      > GtkImage { opacity: 1.0; }
    }
    &:checked {
      &:hover { -gtk-image-effect: highlight; }

      > GtkImage { opacity: 1.0; }
    }
  }

  .unpinned .launcher,
  .pinned .launcher.running {
    &:hover { -gtk-image-effect: highlight; }

    > GtkImage { opacity: 1.0; }
  }
}

// draw underscores
@each $along_side, $opp_side in $orientation {
  .#{$along_side} .budgie-panel {
    WnckTasklist .button,
    .launcher {
      border: 2px solid transparent;
      &:hover {
        border-#{$along_side}: 2px solid gtkalpha($inverted_fg_color, 0.4);
      }
      &:active,
      &:checked {
        border-#{$along_side}: 2px solid $selected_bg_color;
      }
    }
  }
}

// draw underscores and dots
@each $along_side, $_dot in (top, top),
                            (bottom, bottom) {
  .#{$along_side} .budgie-panel {
    .unpinned .launcher,
    .pinned .launcher.running {
      border: 2px solid transparent;
      // FIXME: Upstream deformed aspect-ratio to 1:1.1
      border-image: -gtk-scaled(url("assets/running-dot-#{$_dot}.png"),
                                url("assets/running-dot-#{$_dot}@2.png"))
                    2.0 1.8 / 2.0px 1.8px;
      &:hover,
      &:active,
      &:checked {
        border-#{$along_side}: 2px solid $selected_bg_color;
        border-image: none;
      }
    }
  }
}

// show-desktop styling
.budgie-panel ShowDesktopApplet {
  > .button.flat {
    // use non-scaling units
    padding: 4px 10px;
    border-radius: 0;
    outline-color: transparent;
    color: $inverted_fg_color;
    &:hover {
      color: $selected_fg_color;
      background-color: transparent;
      background-image: none;
    }
    &:active  { color: $selected_fg_color; }
    &:checked { // dim icon when checked
      color: $insensitive_inverted_fg_color;
      background-color: transparent;
      background-image: none;
      &:hover {
        color: $selected_fg_color;
        background-color: transparent;
        background-image: none;
      }
    }
  }
}

// raven-controller applet
.budgie-panel RavenTriggerApplet {
  > .button.flat {
    // use non-scaling units
    padding: 4px 2px;
    border-radius: 0;
    outline-color: transparent;
    color: $inverted_fg_color;
    &:hover {
      color: $selected_fg_color;
      background-color: transparent;
      background-image: none;

      .top & { box-shadow: inset 0 2px gtkalpha($inverted_fg_color, 0.4); }
      .bottom & { box-shadow: inset 0 -2px gtkalpha($inverted_fg_color, 0.4); }
    }
    &:active,
    &:checked {
      color: $selected_fg_color;
      background-color: transparent;
      background-image: none;

      .top & { box-shadow: inset 0 2px $selected_bg_color; }
      .bottom & { box-shadow: inset 0 -2px $selected_bg_color; }
    }
  }
}

.budgie-panel .end-region {
  // add slight lateral spacing for symbolic icons
  // FIXME: Paper icon-pack has thin 'battery' and 'bluetooth' symbolic icon
  // battery
  PowerIndicator GtkImage { padding: 0 2px 0; }
  // bluetooth
  BluetoothIndicator GtkImage { // negative margin doesn't work
    &:dir(ltr) { padding-right: 2px; }
    &:dir(rtl) { padding-left: 2px; }
  }

  // dim symbolic icons to get better uniformity same as NaTray icons
  * > GtkImage { opacity: 0.9; }
}

// main menu styling
.budgie-panel BudgieMenuApplet {
  .button.flat.budgie-menu-launcher {
    padding: 3px 0;
    border-radius: 0;
    outline-color: transparent;
    &:hover {
      background-color: transparent;
      background-image: none;

      .top & { box-shadow: inset 0 2px gtkalpha($inverted_fg_color, 0.4); }
      .bottom & { box-shadow: inset 0 -2px gtkalpha($inverted_fg_color, 0.4); }
    }
    &:active,
    &:checked {
      background-color: transparent;
      background-image: none;

      .top & { box-shadow: inset 0 2px $selected_bg_color; }
      .bottom & { box-shadow: inset 0 -2px $selected_bg_color; }
    }

    GtkImage {
      // override stock icon with specific one
      background-image: url("assets/show-apps.svg");
      background-position: center;
      background-repeat: no-repeat;
      background-size: contain;
      color: transparent;
      opacity: 0.9;
    }

    &:hover,
    &:active,
    &:checked,
    &:checked:hover {
      GtkImage {
        background-image: url("assets/show-apps-active.svg");
        opacity: 1.0;
      }
    }
  }
}

.budgie-menu {
  border-radius: 2px;
  background-color: $secondary_base_color;

  GtkScrolledWindow,
  .list,
  .list-row,
  .scrollbar.trough { // reset styling
    border: none;
    background: none;
    box-shadow: none;
  }

  .list-row { // reset background
    &, &.activatable {
      background-image: none;
      background-color: $secondary_base_color;
      color: $secondary_fg_color;
      transition: none;
    }
    &:hover,
    &.activatable:hover,
    &:selected,
    &.activatable:selected {
      background-image: none;
      background-color: $secondary_base_color;
      // child button node has hover state already
      color: $secondary_fg_color;
      transition: none;
    }
  }

  .categories .category-button { // left-paned elements of GtkPopover
    &:checked {
      background-image: none;
      background-color: transparent;
      color: $selected_bg_color;
      &:hover { background-color: gtkopacity($selected_bg_color, 0.1); }
      &:insensitive {
        color: gtkopacity($selected_bg_color, 0.4);

        GtkLabel { color: inherit; }
      }
    }

    .label { // tweak vertical spacing and font weight
      padding: 0.5em 0 0.6em;
      font-weight: 500;
    }
  }
}

// user-indicator styling
.user-menu {
  border-radius: 2px;
  background-color: $secondary_base_color;

  .list,
  .list-row { // reset styling
    border: none;
    background: none;
    box-shadow: none;
  }

  .list-row {
    // stop weird and unhandled ripple-effect
    &.activatable .indicator-item {
      &:active,
      &:selected { animation: none; }
    }

    &.activatable {
      background-image: none;
      background-color: $secondary_base_color;
      color: $secondary_fg_color;
      transition: none;

      &, & .indicator-item {
        .label,
        GtkImage { color: $secondary_fg_color; }
      }
    }
    &.activatable:hover,
    &.activatable:selected {
      background-image: none;
      background-color: $secondary_base_color;
      color: $secondary_fg_color;
      transition: none;

      .indicator-item {
        .label,
        GtkImage { color: $secondary_fg_color; }

        &:hover,
        &:active,
        &:checked {
          .label,
          GtkImage { color: $fg_color; }
        }
      }
    }

    // top-row (user-name and avatar)
    @at-root .user-menu > GtkBox.vertical .list-row.activatable:first-child {
      padding-bottom: 1em; // fix truncated drop-shadow
      outline-offset: 0;
      outline-width: 0;

      .indicator-item {
        background-color: $suggested_color;
        box-shadow: $z-depth-1,
                    inset 0 1px $highlight_color;
        transition-timing-function: cubic-bezier(0.25, 0.46, 0.45, 0.94);
        transition-property: box-shadow;
        transition-duration: 0.2s;

        &:dir(ltr) { // mask avatar's background
          padding-left: 7px; // non-scaling unit
          background-image: linear-gradient(to right, $borders_color);
          background-position: left center;
          background-repeat: no-repeat;
          background-size: 38px auto; // non-scaling unit
        }
        &:dir(rtl) {
          padding-right: 7px;
          background-image: linear-gradient(to left, $borders_color);
          background-position: right center;
          background-repeat: no-repeat;
          background-size: 38px auto;
        }

        .label {
          color: $inverted_secondary_fg_color;

          &:dir(ltr) { padding-left: 0.6em; }
          &:dir(rtl) { padding-right: 0.6em; }
        }

        GtkImage {
          color: $inverted_secondary_fg_color;

          &:first-child { // avatar image
            padding-top: 0.4em;
            opacity: 0.9;
          }
        }

        &:hover {
          box-shadow: $z-depth-2,
                      inset 0 1px $highlight_color;
          transition-timing-function: cubic-bezier(0.25, 0.46, 0.45, 0.94);
          transition-property: box-shadow;
          transition-duration: 0.2s;

          .label { color: $inverted_fg_color; }

          GtkImage {
            color: $inverted_fg_color;

            &:first-child { opacity: 1.0; }
          }
        }

        .label { font-weight: 700; }
      }
    }
  }
}

// raven styling
.raven {
  padding: 0;
  border: none;
  color: $secondary_fg_color;
  background-color: $secondary_dark_color;
  // FIXME: jst bad idea
  font-size: 90%;

  // mixin with drop-shadows to avoid the raven edge shine-through
  &:dir(ltr) {
    box-shadow: if($variant == 'light',
                               -1px 0 1px rgba(0, 0, 0, 0.12),
                               -1px 0 1px rgba(0, 0, 0, 0.22));
  }
  &:dir(rtl) {
    box-shadow: if($variant == 'light',
                               1px 0 1px rgba(0, 0, 0, 0.12),
                               1px 0 1px rgba(0, 0, 0, 0.22));
  }

  .raven-header {
    border: none;
    color: $tertiary_fg_color;
    background-color: transparent;
    font-weight: 700;

    &.top { // always use dark variant
      background-color: $inverted_dark_color;
      color: $inverted_fg_color;
      box-shadow: $z-depth-2;

      .button.image-button,
      .button.text-button {
        color: $inverted_secondary_fg_color;
        &:hover,
        &:active,
        &:checked { color: $inverted_fg_color; }
        &:insensitive { color: $insensitive_inverted_fg_color; }
      }

      > GtkImage { // gear icon in settings-view
        &:dir(ltr) { padding-left: 4px; }
        &:dir(rtl) { padding-right: 4px; }
      }
    }

    // last-child is constructed without header-label
    &:not(.top):not(.bottom):not(:last-child) {
      > .label,
      > GtkBox > .label,
      > GtkBox > GtkImage { color: $tertiary_fg_color; }
    }
  }

  .raven-background {
    border-width: 1px 0 0;
    border-style: solid none none;
    border-color: $borders_color;
    background-color: transparent;
    box-shadow: if($variant == 'light', $inline-shadow-light,
                                        $inline-shadow-dark);
  }

  .powerstrip {
    background-color: $secondary_dark_color;
    background-image: -gtk-gradient(linear,
                                    left bottom,
                                    left top,
                      color-stop(0.48, if($variant == 'light',
                        $dark_color,
                        mix($dark_color, $secondary_dark_color, 50%))),
                      color-stop(0.50, if($variant == 'light',
                        gtkopacity($top_edge_border_color, 0.01),
                        gtkopacity($solid_dark_borders_color, 0.4))),
                      color-stop(0.50, transparent),
                      to(transparent));
    box-shadow: none;
    transition: none;

    .button.flat.image-button { // FIXME: non-scaling unit
      @extend %button_normal;
      margin: 2px 8px;
      padding: 5.3px;
      color: $inverted_secondary_fg_color;
      background-color: $suggested_color;
      &:hover {
        @extend %button_hover;
        color: $inverted_fg_color;
      }
      &:active {
        @extend %button_active;
        color: $selected_fg_color;
        background-color: $selected_bg_color;
      }
      &:checked {
        @extend %button_checked;
        color: $inverted_fg_color;
        background-color: mix($selected_fg_color, $suggested_color, 20%);
      }
      &:insensitive {
        @include button(flat-insensitive, $secondary_dark_color,
                                          $insensitive_inverted_fg_color);
      }
    }
  }

  .option-subtitle {
    color: $insensitive_secondary_fg_color;
    font-size: 90%;
  }

  GtkScrolledWindow,
  .list{ background: transparent; }

  .list-row,
  .list-row.activatable {
    background-color: transparent;
    &:hover { color: $fg_color; }
    &:selected {
      color: $selected_bg_color;
      &:hover { background-color: gtkopacity($selected_bg_color, 0.1); }
    }

    .separator { color: gtkopacity($insensitive_fg_color, 0.55); }
  }

  // use flat-style
  .button.image-button {
    @include button(flat-normal);
    &:hover { @include button(flat-hover); }
    &:active { @include button(flat-active); }
    &:insensitive { @include button(flat-insensitive); }
    &:checked { @include button(flat-checked); }
    &:checked:insensitive { @include button(flat-checked-insensitive); }
  }

  .raven-header {
    > .button.image-button { // 'gear' button
      padding: 0.6em;
    }

    > .button.text-button { // 'exit' button
      @extend .button.suggested-action;
      padding: 0.5em 1em 0.6em;
      color: $secondary_selected_fg_color;
      &:hover { color: $selected_fg_color; }
      &:active {
        color: $selected_fg_color;
        background-color: $selected_bg_color;
      }
    }

    .expander-button { // expander arrow buttons
      padding: 0.5em;
      border-radius: 100px;
      outline-radius: 100px;
      color: $tertiary_fg_color;
      &:hover,
      &:active { color: $fg_color; }
    }

    .image-button.primary-control { // close button in MPRIS
      padding: 0.5em;
      border-radius: 100px;
      outline-radius: 100px;
      color: gtkopacity($destructive_color, 0.75);
      &:hover,
      &:active,
      &:checked { color: $destructive_color; }
      &:insensitive { color: gtkopacity($destructive_color, 0.4); }
    }
  }

  .linked.stack-switcher > .button.text-button { // switcher buttons
    padding-top: 0.45em;
    padding-bottom: 0.55em;
  }

  BudgieAppearanceSettings {
    // override built-in vertical spacing
    GtkGrid > .label:first-child,
    GtkGrid > .label:nth-child(2) { padding: 8px 0; }
  }

  BudgieBackgroundSettings {
    // override built-in vertical spacing
    GtkGrid > .label:first-child { padding: 8px 0; }
  }

  BudgieWmSettings {
    // override built-in vertical spacing
    // FIXME: if 'window-scaling' was unveiled, should move to nth-child(2)
    GtkGrid > .label:first-child { padding: 8px 0; }
  }

  GtkCalendar {
    border: none;
    background-color: transparent;
  }
}

// MPRIS applet
.raven-mpris {
  border: none;
  color: $fg_color;
  background-color: gtkopacity($dark_color, 0.9);

  .button.image-button { padding: 0.6em; }
}

// clock-applet styling
.budgie-panel {
  // shrink label
  ClockApplet .label {
    padding: 0 2px;
    font-size: 90%;
  }
}

// popover of sound-indicator styling
.budgie-container.top,
.budgie-container.bottom {
  > .popover > GtkBox.vertical > .button.flat.image-button {
    margin: 0 2px;

    &:first-child { // '+' button
      &:hover {
        @extend %button_flat_hover;
        background: none;
        color: $success_color;
      }
      &:insensitive {
        @extend %button_flat_insensitive;
        background: none;
        color: gtkalpha($success_color, 0.4);
      }
    }

    &:last-child { // '-' button
      &:hover {
        @extend %button_flat_hover;
        background: none;
        color: $error_color;
      }
      &:insensitive {
        @extend %button_flat_insensitive;
        background: none;
        color: gtkalpha($error_color, 0.4);
      }
    }
  }
}

// places-indicator styling
.popover.places-menu {
  padding: 0;

  .places-section-header {
    padding: 0.3em;

    > .label {
      color: $secondary_fg_color;
      font-weight: 400;
    }

    > GtkImage {
      padding-left: 0.4em;
      color: $accent_color;

      &:dir(rtl) { padding-right: 0.4em; }
    }

    // FIXME: use border as positive margins
    .button.image-button {
      padding: 0.6em;
      border: 2px solid transparent;
    }
  }

  GtkBox.vertical > GtkRevealer {
    > .list { // drop-down list
      box-shadow: if($variant == 'light', $inline-shadow-light,
                                          $inline-shadow-dark);

      // draw top-border in row class
      .list-row:first-child { border-top: 1px solid $borders_color; }
    }
  }

  GtkInfobar.message-bar {
    border-radius: 2px 2px 0 0;
  }

  .list {
    background-color: transparent;

    > .list-row.activatable {
      &:hover,
      &:active {
        color: $fg_color;

        .name-button { // = 'toolbutton > button'
          &,
          &:hover,
          &:active {
            color: $fg_color;
            background-color: transparent;
            background-image: none;
            animation: none;
          }
          &:active {
            animation: list_ripple_effect 0.2s cubic-bezier(0.4, 0, 0.2, 1) forwards;
          }
        }
      }

      .unmount-button {
        padding: 0.6em;
        border: 2px solid transparent;
      }
    }

    .label.dim-label {
      font-size: 90%;
      font-weight: 700;
    }
  }

  GtkBox.unlock-area {
    .list {
      box-shadow: if($variant == 'light', $inline-shadow-light,
                                          $inline-shadow-dark);

      .list-row:first-child { border-top: 1px solid $borders_color; }
    }

    .entry { // where is the combo node?
      padding: 0.6em;
    }

    .button {
      padding: 0.6em;
      border: 2px solid transparent;
      border-radius: 2px; // revert to square button
      outline-radius: 2px;
    }
  }
}

// keyboard indicator applet
.keyboard-label > .label {
  // tweak base-line
  padding-bottom: 0.1em;
}

// workspace-switcher applet
.start-region,
.center-region,
.end-region {
  .top & {
    WnckPager{
      &:selected { box-shadow: inset 0 2px $selected_bg_color; }
    }
  }

  .bottom & {
    WnckPager {
      &:selected { box-shadow: inset 0 -2px $selected_bg_color; }
    }
  }
}

// notifications
.budgie-notification-window,
.budgie-osd-window {
  border-radius: 2px;
  background-color: transparent;

  // draw actual backgrounds
  .drop-shadow { background-color: gtkopacity($inverted_dark_color, 0.9); }
}

.budgie-notification,
.budgie-osd {
  // always use dark-variant
  color: $inverted_fg_color;
  background-color: transparent;

  .notification-title {
    color: $inverted_secondary_fg_color;
    font-size: 110%;
    font-weight: 500;
  }

  .notification-body {
    color: $inverted_fg_color;
    font-size: 90%;
    font-weight: 400;
  }

  .budgie-osd-text {
    color: $inverted_fg_color;
    font-size: 110%;
  }

  GtkProgressBar { // mimic level-bar
    &.trough {
      color: $inverted_fg_color;
      background-color: $track_color;
    }
  }

  .progressbar { background-color: $success_color; }
}

.budgie-notification,
.budgie-osd,
.drop-shadow {
  .button,
  .linked > botton { // OSD-style buttons
    border-image: none;
    color: $inverted_secondary_accent_label_color;
    &:hover,
    &:active,
    &:checked { color: $inverted_accent_label_color; }
    &:insensitive { color: gtkopacity($inverted_accent_label_color, 0.4); }
  }
}

// dialog styling
.background.csd.budgie-run-dialog {
  border: none;
  background-color: transparent;

  .window-frame {
    border-radius: 2px;
    border: none;
    background-color: gtkopacity($inverted_dark_color, 0.9);
    box-shadow: $z-depth-4;
    &:backdrop { box-shadow: $z-depth-2; }
  }

  .separator {
    -GtkWidget-separator-width: 0;
    border: 0 none transparent;
    color: transparent;
  }

  GtkBox > GtkBox {
    .entry {
      color: $inverted_fg_color;
      &:focus { color: $selected_fg_color; }
      &:insensitive { color: $insensitive_inverted_fg_color; }

      &.image {
        &:not(:hover):not(:active) { color: $inverted_fg_color; }
        &:active { color: $selected_bg_color; }
        &:insensitive { color: $insensitive_inverted_fg_color; }
      }
    }
  }

  .scrollbar {
    .slider {
      background-color: gtkopacity($inverted_tertiary_fg_color, 0.55);
      &:hover {
        background-color: gtkopacity($inverted_secondary_fg_color, 0.55);
      }
      &:active { background-color: $inverted_fg_color; }
      &:insensitive { opacity: 0.4; }
    }

    .trough {
      border: none;
      background: none;
      box-shadow: none;
    }
  }

  GtkScrolledWindow {
    border-image: none; // remove underline indicator
    background-color: transparent;

    GtkGrid .button.flat {
      border-radius: 2px;
      outline-radius: 2px;
    }

    .list {
      background-color: transparent;

      .list-row,
      .list-row.activatable {
        background-color: transparent;
        color: $inverted_fg_color;
        transition: none;
      }
    }
  }

  // 'close' button
  .button.flat.image-button {
    color: $inverted_secondary_accent_label_color;
    &:hover,
    &:active,
    &:checked { color: $inverted_accent_label_color; }
    &:insensitive { color: gtkopacity($inverted_accent_label_color, 0.4); }
  }
}

// session-dialog and polkit-dialog styling
.budgie-session-dialog,
.budgie-polkit-dialog {
  border-radius: 2px;
  border-width: 0;
  // always use dark-color of dark variant
  background-color: gtkopacity($inverted_dark_color, 0.9);
  color: $inverted_fg_color;
  font-weight: 700;

  .entry {
    color: $inverted_fg_color;
    &:focus { color: $selected_fg_color; }
    &:insensitive { color: $insensitive_inverted_fg_color; }
  }

  .button,
  .linked > .button {
    @extend %button_flat_normal;
    padding: 0.7em 1em 0.8em;
    border: 2px solid transparent;
    border-radius: 0;
    color: $inverted_secondary_accent_label_color;
    background-color: transparent;
    background-size: 192px * 1 / 0.8 192px * 1 / 0.8, auto;
    &:hover {
      @extend %button_flat_hover;
      background-color: transparent;
      color: $inverted_accent_label_color;
    }
    &:active {
      @extend %button_flat_active;
      background-color: transparent;
      color: $inverted_accent_label_color;
    }
    &:checked {
     @extend %button_flat_checked;
      background-color: transparent;
      color: $inverted_secondary_accent_label_color;
    }
    &:insensitive { @include button(flat-insensitive); }

    &:first-child {
      border-bottom-left-radius: 2px;
      border-right-width: 0;
    }
    &:last-child {
      border-bottom-right-radius: 2px;
      border-left-width: 0;
    }
  }
}

// polkit-dialog specific styling
.budgie-polkit-dialog {
  .message { color: $inverted_secondary_fg_color; }

  .failure {
    color: $warning_color;
    font-weight: 700;
  }
}

// misc settings
.drop-shadow {
  background-color: transparent;
  background-image: none;
  box-shadow: $z-depth-2;
}


// /*****************
//  * Unity Desktop *
//  *****************/

// window decorations
UnityDecoration { // FIXME: do not use scalable units
  -UnityDecoration-extents: 24px 0 0 0;
  -UnityDecoration-input-extents: 8px;

  -UnityDecoration-shadow-offset-x: 0;
  -UnityDecoration-shadow-offset-y: 3.5px;
  -UnityDecoration-active-shadow-color: rgba(0, 0, 0, 0.73);
  -UnityDecoration-active-shadow-radius: 17px;
  -UnityDecoration-inactive-shadow-color: rgba(0, 0, 0, 0.25);
  -UnityDecoration-inactive-shadow-radius: 11px;

  -UnityDecoration-glow-size: 10px;
  -UnityDecoration-glow-color: $selected_bg_color;

  -UnityDecoration-title-indent: 16px;
  -UnityDecoration-title-fade: 32px;
  -UnityDecoration-title-alignment: 0.0;

  &.top {
    border: 0 none transparent;
    border-radius: 2px 2px 0 0;
    padding: 1px 6px 0 6px;

    background-image: linear-gradient(to bottom, $inverted_dark_color);
    // The foreground color will be used to paint the text
    color: $inverted_fg_color;
    box-shadow: inset 0 1px $highlight_color;

    &:backdrop { color: $insensitive_inverted_fg_color; }

    &:hover { // for L.I.M's selected menuitem
      color: $selected_fg_color;
      box-shadow: inset 0 -2px $selected_bg_color;
    }
  }

  &.left,
  &.right,
  &.bottom {
    &, &:backdrop { background-image: none; }
  }
}

// panel styling
UnityPanelWidget,
.unity-panel {
  &, &:backdrop {
    border-bottom: 1px solid $panel_bg_color;
    background-color: $panel_bg_color;
    color: $inverted_fg_color;
    box-shadow: none;
  }
}

.unity-panel.menubar,
.unity-panel .menubar {
  background-color: transparent;
  background-image: none;
  box-shadow: none;

  &.menuitem,
  & .menuitem * {
    padding: 0 6px;
    border-radius: 0;
    border-bottom: none;
    background-color: transparent;
    color: $inverted_fg_color;
    &:hover {
      color: $selected_fg_color;
      box-shadow: inset 0 2px $selected_bg_color;
    }
  }
}

// workaround for ugly Ubuntu-related CSD patches
.background:not(.csd):not(.ssd):not(.solid-csd) {
  GtkBox .header-bar,
  .header-bar {
    &, &:not(:last-child) {
      padding: 0.4em;
      border-radius: 0;
      border-top: 0 none transparent;
      box-shadow: none;

      // unset fade-effect
      *:backdrop { opacity: 1.0; }
    }
  }

  &.tiled,
  &.maximized {
    GtkBox .header-bar,
    .header-bar {
      &, &:not(:last-child) {
        border-top: 0 none transparent;
        background-color: $inverted_dark_color;
        box-shadow: none;
      }
    }
  }
}


// /***********************
//  * Lightdm-Gtk-Greeter *
//  ***********************/

.lightdm-gtk-greeter {
  // top-panel styling
  #panel_window {
    background-image: linear-gradient(to bottom, $panel_bg_color);
    color: $inverted_fg_color;
    box-shadow: none;
    font-weight: 700;
    text-shadow: none;

    &, &.background,
    > * > * { background-color: transparent; } // FIXME: ugly wildcard

    .menubar {
      @extend .gnome-panel-menu-bar;
      background-color: transparent;
      color: $inverted_fg_color;

      .label,
      GtkImage {
        padding: 0 0.5em;
        color: $inverted_fg_color;
      }

      &:hover {
        color: $selected_fg_color;
        box-shadow: inset 0 2px $selected_bg_color;

        .label,
        GtkImage { color: $selected_fg_color; }
      }

      // flip underline-indicator vertically
      > .menuitem {
        padding: 0.4em 0;
        background-color: transparent;
        &:hover { box-shadow: inset 0 2px $selected_bg_color; }
      }

      .menu {
        .menuitem {
          padding: 0.4em 0.6em 0.5em;
          font-weight: 400;
          text-shadow: none;

          // override above hacks
          &, .label { color: $secondary_fg_color; }
          &:hover,
          &:hover .label { color: $fg_color; }
          &:insensitive,
          &:insensitive .label { color: $insensitive_fg_color; }
        }
      }
    }
  }

  // main container
  #login_window,
  #shutdown_dialog,
  #restart_dialog {
    @extend .message-dialog;
    border: 1px solid $borders_color;
    border-radius: 2px;
    box-shadow: none;

    .button {
      padding: 0.7em 1em 0.8em;
      color: $inverted_secondary_fg_color;
      &:hover,
      &:active { color: $inverted_fg_color; }
      &:insensitive { color: $insensitive_inverted_fg_color; }

      &#login_button { @extend .button.suggested-action; }

      &#restart_button,
      &#shutdown_button { @extend .button.destructive-action; }
    }

    GtkComboBox .button {
      padding: 0.9em 8px 1em;
      border-image: -gtk-gradient(radial,
                                  center bottom, 0,
                                  center bottom, 0.5,
                                  to($track_color),
                                  to(transparent))
                                  0 0 1 / 0 0 1px;
      color: $inverted_fg_color;
      font-weight: 500;
      &:hover,
      &:active {
        border-image: -gtk-gradient(radial,
                                    center bottom, 0,
                                    center bottom, 0.5,
                                    to($selected_bg_color),
                                    to(transparent))
                                    0 0 2 / 0 0 2px;
        color: $selected_fg_color;
      }
      &:insensitive,
      &:checked:insensitive {
        border-image: -gtk-gradient(radial,
                                    center bottom, 0,
                                    center bottom, 0.5,
                                    to($track_color),
                                    to(transparent))
                                    0 0 1 / 0 0 1px;
        color: $insensitive_inverted_fg_color;
      }
    }

    .entry { // prevent junmping when showing CapsLock warning
      padding: 0.9em 8px 1em;
      font-family: monospace;
    }

    GtkInfoBar.error { // notification revealer
      margin: 0 4px; // prevent unwanted overflow
      border: none;
      background-color: transparent;
      color: $error_color;
      font-weight: 700;
      font-size: 110%;
      transition: none; // transition causes visual glitches
    }
  }

  #login_window {
  }

  #content_frame { padding-bottom: 14px; }

  #buttonbox_frame {
    padding-top: 8px; // reserve gap between infobar and buttonbox
  }
}


// /************
//  * Corebird *
//  ************/

// use normal foreground colour
GtkStack .button.profile-button {
  &:checked { color: $fg_color; }
}

// account menu button
.titlebar.header-bar GtkBox {
  .button.account-button { // left-most account-button
    // revert to square button since we can't make perfect circle button
    border-radius: 2px;
    outline-radius: 2px;

    // FIXME: it doesn't work
    .avatar-round { border-color: transparent; }
  }
}

// use asymmetrical separators
.list > .list-row.activatable.tweet {
  &:dir(ltr) {
    border-image: linear-gradient(to right,
                                  transparent 72px,
                                  $borders_color 72px,
                                  $borders_color)
                                  0 0 1 / 0 0 1px;
  }
  &:dir(rtl) {
    border-image: linear-gradient(to left,
                                  transparent 72px,
                                  $borders_color 72px,
                                  $borders_color)
                                  0 0 1 / 0 0 1px;
  }
}


// /********
//  * Nemo *
//  ********/

.nemo-desktop.nemo-canvas-item {
  @extend .nautilus-desktop.nautilus-canvas-item;
}

NemoWindow {
  // workaround for invisible text in rename entry
  EelEditableLabel.entry {
    &, &:focus { transition: none; }
  }

  // draw bottom border of toolbar
  .toolbar.primary-toolbar {
    border-bottom: 1px solid $borders_color;

    .button.image-button { // damned 'reload' button
      GtkAlignment > GtkBox > GtkImage { padding: 0 0.3em; }
    }

    .button.toggle,
    .linked > .button {
      padding: 0 1.2em 0.1em;

      &.image-button {
        border-radius: 100px;
        outline-radius: 100px;

        GtkImage { padding: 0 0.1em; }
      }
    }
  }

  // tweak path-bar buttons
  .primary-toolbar NemoPathBar.linked.raised {
    > .button { // ugly arrow button at most-left
      padding: 0;
      border-radius: 2px;
      outline-radius: 2px;

      GtkArrow { -GtkArrow-arrow-scaling: 0.5; }

      &, GtkArrow {
        color: $secondary_fg_color;
        &:hover,
        &:active,
        &:checked {
          color: $fg_color;
          &:insensitive { color: $insensitive_fg_color; }
        }
        &:insensitive { color: $insensitive_secondary_fg_color; }
      }
    }

    // revive horizontal padding
    .button.text-button,
    .button.image-button { padding: 0.3em 0.7em 0.4em; }
  }

  // tweak notebook colour
  .notebook { background-color: $base_color; }

  // tweak sidebar
  .sidebar {
    .frame { border-width: 0; } // remove double-border

    GtkDrawingArea { background-color: transparent; }
  }

  // force using flat-style on bottom bar
  GtkGrid > GtkEventBox {
    padding: 0.2em;
    background-color: $secondary_dark_color;
    box-shadow: if($variant == 'light', $inline-shadow-light,
                                        $inline-shadow-dark);

    > .toolbar {
      border-style: none;
      background-color: transparent;
      box-shadow: none;
    }

    > .toolbar .button.image-button {
      @extend %button_flat_normal;
      border-radius: 2px;
      outline-radius: 2px;
      padding: 0.7em 1em 0.8em;
      border-image: -gtk-gradient(radial,
                                  center bottom, 0,
                                  center bottom, 0.001,
                                  to($track_color),
                                  to(transparent))
                                  0 0 0 / 0 0 0px;
      background-color: transparent;
      color: $secondary_fg_color;
      &:hover {
        @extend %button_flat_hover;
        border-image: none;
        background-color: transparent;
        color: $fg_color;
      }
      &:checked {
        @extend %button_flat_checked;
        border-image: -gtk-gradient(radial,
                                    center bottom, 0,
                                    center bottom, 0.5,
                                    to($selected_bg_color),
                                    to(transparent))
                                    0 0 2 / 0 0 2px;
        background-color: transparent;
        color: $fg_color;
        &:insensitive {
          @extend %button_flat_checked_insensitive;
          border-image: none;
          background-color: transparent;
          color: $insensitive_fg_color;
        }
      }
      &:insensitive {
        @extend %button_flat_insensitive;
        border-image: none;
        background-color: transparent;
        color: $insensitive_secondary_fg_color;
      }
    }

    > .toolbar .separator.vertical { // remove separator
      -GtkWidget-separator-width: 0;
      border: 0 none transparent;
      color: transparent;
    }
  }
}


// /***************************
//  * Cinnamon-control-center *
//  ***************************/

CcShellCategoryView { // stop using $base_color
  CcShellItemView.view { background-color: transparent; }
}

.cs-header {
  background-color: $secondary_dark_color;
  box-shadow: if($variant == 'light', $inline-shadow-light,
                                      $inline-shadow-dark);
}


// /*********
//  * XFce4 *
//  *********/

.XfceHeading { // FIXME: I'm not sure what's this
  margin: 0;
  padding: 0;
  border-width: 0;
  background-image: none;
  background-color: $base_color;
  color: $fg_color;
  text-shadow: none;
}

.xfce4-panel,
.xfce4-panel.background {
  &, // unset borders
  .frame { border: 0 none transparent; }

  background-color: $panel_bg_color;
  color: $inverted_fg_color;
  font-weight: 700;
  text-shadow: none;
  icon-shadow: none;

  // dashed outline indicator?
  // default -> 1px dashed #ff0000;
  &.marching-ants { border: 1px dashed $destructive_color; }

  .button {
    padding: 0 4px;
    border: none;
    border-radius: 0;
    background-color: transparent;
    background-image: none;
    color: $inverted_fg_color;
    font-weight: 700;
    transition: none;
    &:hover {
      color: $selected_fg_color;
      background-color: transparent;
      background-image: none;
      box-shadow: inset 0 -2px $track_color;
      transition: none;
    }
    &:active,
    &:checked,
    &:hover:checked,
    &:insensitive:checked { // 'checked' = 'active'
      color: $selected_fg_color;
      background-color: transparent;
      background-image: none;
      box-shadow: inset 0 -2px $selected_bg_color;
      transition: none;
      animation: none;
    }
  }

  .menu {
    font-weight: 400; // for enforcing regular weight
    text-shadow: none;
    -gtk-image-effect: none;
  }
}

TopMenuAppMenuBar {
  background-color: $panel_bg_color; // do not use transparent
  color: $inverted_fg_color;
  box-shadow: none;

  > .menuitem {
    color: $inverted_fg_color;
    background-color: transparent;
    &:hover {
      color: $selected_fg_color;
      box-shadow: inset 0 -2px $selected_bg_color;
      transition: none;
    }
  }
}

// Notify-OSD
// FIXME: drop-shadow composition does not work
#XfceNotifyWindow {
  &, &:hover {
    border-radius: 2px;
    border: 1px solid $borders_color;
    color: $inverted_fg_color;
    background-color: gtkopacity($inverted_dark_color, 0.9);
    box-shadow: none;
  }

  GtkBox.vertical {
    > .label#summary {
      color: $inverted_fg_color;
      font-weight: 700;
    }

    > .label#body { color: $inverted_secondary_fg_color; }
  }

  GtkButtonBox > .button {
    @extend %button_flat_normal;
    background-color: transparent;
    &:not(:active):not(:insensitive):not(hover) {
      background-color: transparent;
      color: $inverted_secondary_accent_label_color;
    }
    &:hover {
      @extend %button_flat_hover;
      background-color: transparent;
      color: $inverted_accent_label_color;
    }
    &:active {
      @extend %button_flat_active;
      border-image: none;
      background-color: transparent;
      color: $inverted_accent_label_color;
      box-shadow: none;
    }
    &:checked {
      @extend %button_flat_checked;
      border-image: none;
      background-color: transparent;
      color: $inverted_accent_label_color;
      box-shadow: none;
    }
    &:insensitive { @include button(flat-insensitive); }
  }

  GtkProgressBar {
    -GtkProgressBar-xspacing: 0;
    -GtkProgressBar-yspacing: 0;
    -GtkProgressBar-min-horizontal-bar-height: 4;
    color: $inverted_secondary_fg_color;

    &.trough {
      border-style: none;
      background-color: gtkopacity($accent_color, 0.2);
      box-shadow: none;
    }
  }

  .progressbar {
    border-style: none;
    border-radius: 0;
    background-image: none;
    background-color: $accent_color;
  }
}


// /************
//  * Synaptic *
//  ************/

GtkWindow > GtkBox.vertical > GtkBox.horizontal {
  > .toolbar {
    background-color: transparent;
    box-shadow: none;

    GtkToolItem > GtkBox {
      .label,
      .entry {
        padding-top: 0.1em;
        padding-bottom: 0.1em;
        font-size: 90%;
      }

      > .label { color: $insensitive_fg_color; }
    }
  }

  > GtkAlignment { background-color: transparent; }
}


// /**********************
//  * Eclipse/SWT (neon) *
//  **********************/

.background:not(.csd) > GtkBox.vertical {
  > .menubar { // force setting foreground colour
    color: $inverted_secondary_fg_color;
  }

  > GtkScrolledWindow .toolbar { // remove inline-shadows
    box-shadow: none;
  }
}


// /***********
//  * Synapse *
//  ***********/

.background:not(.csd):not(.ssd):not(.solid-csd) > GtkBox.vertical {
  > SynapseGuiSelectionContainer SynapseGuiMatchListView,
  > SynapseGuiSpecificMatchList GtkWidget {
    &:selected { // selected-row?
      color: $selected_fg_color;
      background-color: $selected_bg_color;
    }
  }
}

